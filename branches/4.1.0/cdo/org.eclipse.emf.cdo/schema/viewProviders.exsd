<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.emf.cdo" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.emf.cdo" id="viewProviders" name="CDO View Providers"/>
      </appinfo>
      <documentation>
         This extension point is used to define the CDOViewProvider factories that create instances capable of handling URIs according to the defined regular expression. This is registered to a global CDOViewProviderFactory Registry &lt;samp&gt;CDOViewProviderFactory.INSTANCE&lt;/samp&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="viewProvider" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>

               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>

               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>

               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="viewProvider">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>

               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.emf.cdo.view.CDOViewProvider"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="regex" type="string" use="required">
            <annotation>
               <documentation>

               </documentation>
            </annotation>
         </attribute>
         <attribute name="priority" type="string" use="default" value="500">
            <annotation>
               <documentation>

               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         2.0.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         Following is an example of how a URI scheme can be registered:
&lt;pre&gt;
  &lt;viewprovider factory=&quot;org.eclipse.emf.cdo.util.DefaultCDOViewProvider$DefaultCDOViewProviderFactory&quot;
   high_priority=&quot;false&quot;
   regex=&quot;cdo.*&quot;&gt;
  &lt;/viewprovider&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         The value of the class attribute must represent a class
that implements &lt;samp&gt;org.eclipse.emf.ecore.resource.Resource.Factory&lt;/samp&gt;.
&lt;p&gt;
A URI scheme can be also registered from the source code with the &lt;samp&gt;Resource.Factory.Registry.INSTANCE&lt;/samp&gt; as follows:
&lt;/p&gt;
&lt;pre&gt;
  Resource.Factory.Registry.INSTANCE.putFactory(new DefaultCDOViewProviderFactory(), &quot;cdo.*&quot;, &quot;false&quot;);
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         org.eclipse.emf.cdo.util.DefaultCDOViewProvider$DefaultCDOViewProviderFactory provides default stub implementation. org.eclipse.emf.cdo.internal.ui.preferences.PreferencesCDOViewProvider.PreferencesCDOViewProviderFactory creates a provider that opens views according to a preference-page based repository URI list.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2004 - 2012 Eike Stepper (Berlin, Germany) and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
