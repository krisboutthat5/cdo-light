Index: src/CDOPerformanceTests.java
===================================================================
--- src/CDOPerformanceTests.java	(revision 50)
+++ src/CDOPerformanceTests.java	(working copy)
@@ -10,6 +10,9 @@
 import org.eclipse.emf.cdo.CDOObject;
 import org.eclipse.emf.cdo.common.id.CDOIDUtil;
 import org.eclipse.emf.cdo.eresource.CDOResource;
+import org.eclipse.emf.cdo.internal.net4j.Net4jSessionFactory;
+import org.eclipse.emf.cdo.internal.net4j.protocol.CDOClientProtocolFactory;
+import org.eclipse.emf.cdo.internal.server.embedded.EmbeddedClientSessionConfiguration;
 import org.eclipse.emf.cdo.net4j.CDONet4jUtil;
 import org.eclipse.emf.cdo.net4j.CDOSessionConfiguration;
 import org.eclipse.emf.cdo.server.CDOServerUtil;
@@ -75,7 +78,9 @@
 	private static int size   = 400000;
 	private StoreType storeType = StoreType.MEM;
 
-	private IStore store;
+	private static IRepository repository;
+
+	private static IStore store;
 	
 	
 	public enum StoreType{
@@ -113,7 +118,7 @@
 		writer.close();
 	}
 	
-	@Test
+	@Test @Ignore
 	public void testOpenCDOTransaction() throws IOException {
 		IStoreConfig storeConfig = startCDOServer();
 		CDOSession sess = openCDOSession(storeConfig);
@@ -124,7 +129,7 @@
 		writer.close();
 	}
 	
-	@Test
+	@Test @Ignore
 	public void testCreateCDOResource() throws IOException {	
 		IStoreConfig storeConfig = startCDOServer();
 		CDOSession sess = openCDOSession(storeConfig);
@@ -136,7 +141,7 @@
 		writer.close();
 	}
 	
-	@Test
+	@Test @Ignore
 	public void testAddModelToCDOResource() throws IOException {	
 		IStoreConfig storeConfig = startCDOServer();
 		CDOSession sess = openCDOSession(storeConfig);
@@ -149,7 +154,7 @@
 		writer.close();
 	}
 	
-	@Test
+	@Test @Ignore
 	public void testCDOTransactionCommit() throws CommitException, IOException {	
 		IStoreConfig storeConfig = startCDOServer();
 		CDOSession sess = openCDOSession(storeConfig);
@@ -163,7 +168,7 @@
 		writer.close();
 	}
 	
-	@Test
+	@Test @Ignore
 	public void testCDOTransactionClose() throws CommitException, IOException {	
 		IStoreConfig storeConfig = startCDOServer();
 		CDOSession sess = openCDOSession(storeConfig);
@@ -178,7 +183,7 @@
 		writer.close();
 	}
 	
-	@Test
+	@Test @Ignore
 	public void testCDOSessionClose() throws CommitException, IOException {	
 		IStoreConfig storeConfig = startCDOServer();
 		CDOSession sess = openCDOSession(storeConfig);
@@ -194,11 +199,12 @@
 		writer.close();
 	}
 	
-	@Test
+	@Test @Ignore
 	public void testOpenCDOView() throws IOException {
 		IStoreConfig storeConfig = startCDOServer();
 		CDOSession sess = openCDOSession(storeConfig);
-		sess.openView();
+		CDOView view = sess.openView();
+		view.getObject(CDOIDUtil.createLong(1));
 		String trace = CDOTracingUtils.dumpHtmlTrace();
 		BufferedWriter writer = new BufferedWriter(new FileWriter("OpenCDOView.html"));
 		writer.append(trace);
@@ -286,10 +292,14 @@
 
 		    IConnector connector = createConnector(ConType.JVM, hostPort);
 
-		    CDOSessionConfiguration config = CDONet4jUtil.createSessionConfiguration();
-		    config.setConnector(connector);
-		    config.setRepositoryName(storeConfig.getRepositoryName());
-		    org.eclipse.emf.cdo.net4j.CDOSession cdoSession = config.openSession();
+//		    CDOSessionConfiguration config = CDONet4jUtil.createSessionConfiguration();
+//		    config.setConnector(connector);
+//		    config.setRepositoryName(storeConfig.getRepositoryName());
+		    
+		    EmbeddedClientSessionConfiguration sessConfig = new EmbeddedClientSessionConfiguration();
+		    sessConfig.setRepository(repository);
+		    
+		    org.eclipse.emf.cdo.server.embedded.CDOSession cdoSession = sessConfig.openSession();
 		    cdoSession.getPackageRegistry().putEPackage(EPackage.Registry.INSTANCE.getEPackage(EXTLibraryPackage.eNS_URI));
 		    ((org.eclipse.emf.cdo.net4j.CDOSession) cdoSession).options().getProtocol().setTimeout(SESSION_TIMEOUT);
 		    ((org.eclipse.emf.cdo.net4j.CDOSession) cdoSession).options().setCommitTimeout(COMMIT_TIMEOUT);
@@ -352,7 +362,9 @@
 		    this.store = createStore(storeConfig);
 		    Map<String, String> properties = createProperties(storeConfig.getRepositoryName());
 
-		    IRepository repository = CDOServerUtil.createRepository(storeConfig.getRepositoryName(), this.store, properties);
+		    this.repository = CDOServerUtil.createRepository(storeConfig.getRepositoryName(), this.store, properties);
+		    
+		    
 		    CDOServerUtil.addRepository(IPluginContainer.INSTANCE, repository);
 
 		    createAcceptor(conType, host,hostPort);
@@ -366,7 +378,8 @@
 		  }
 	  
 	  private static void configureClientContainer(final IManagedContainer container) {
-		    CDONet4jUtil.prepareContainer(container);
+		    container.registerFactory(new CDOClientProtocolFactory());
+		    container.registerFactory(new Net4jSessionFactory());
 	  }
 	  
 	  private static void configureServerContainer(ConType conType,IManagedContainer container) {
